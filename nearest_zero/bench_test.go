package main

import (
	"bytes"
	"io"
	"testing"
)

func BenchmarkGet(b *testing.B) {
	str := []byte("6\n0 7 9 4 8 20")
	for i := 0; i < b.N; i++ {
		buff := bytes.NewBuffer(str)
		get(buff)
	}
}

func BenchmarkManyDomik(b *testing.B) {
	str := []byte("1000000\n
	for i := 0; i < b.N; i++ {
		buff := bytes.NewBuffer(str)
		get(buff)
	}
}

func BenchmarkGet1(b *testing.B) {
	str := []byte("6\n0 7 9 4 8 20")
	for i := 0; i < b.N; i++ {
		buff := bytes.NewBuffer(str)
		get1(buff, io.Discard)
	}
}

func BenchmarkManyDomik1(b *testing.B) {
	str := []byte("1000000\n
	for i := 0; i < b.N; i++ {
		buff := bytes.NewBuffer(str)
		get1(buff, io.Discard)
	}
}

func BenchmarkGet2(b *testing.B) {
	str := []byte("6\n0 7 9 4 8 20")
	for i := 0; i < b.N; i++ {
		buff := bytes.NewBuffer(str)
		get2(buff, io.Discard)
	}
}

func BenchmarkManyDomik2(b *testing.B) {
	str := []byte("1000000\n
	for i := 0; i < b.N; i++ {
		buff := bytes.NewBuffer(str)
		get2(buff, io.Discard)
	}
}
